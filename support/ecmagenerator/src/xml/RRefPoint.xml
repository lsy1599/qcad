<?xml version="1.0"?>
<unit xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:rs="http://www.ribbonsoft.com">
  <class name="RRefPoint"
  xsi:noNamespaceSchemaLocation="../class.xsd" isCopyable="true"
  hasShell="false" sharedPointerSupport="false" isQObject="false"
  hasStreamOperator="true" isAbstract="false" isScriptable="true">
    <baseClass name="RVector" specifier="public" />
    <enum name="Flag">
      <value name="NoFlags" />
      <value name="Secondary" />
      <value name="Tertiary" />
      <value name="Center" />
      <value name="Ignore" />
      <value name="Start" />
      <value name="End" />
      <value name="Arrow" />
    </enum>
    <constructor>
      <variant />
      <variant>
        <arg type="RVector &amp;" typeName="RVector" name="v"
        isConst="true" />
        <arg type="RRefPoint::Flags" typeName="RRefPoint::Flags"
        name="f" isConst="false" />
      </variant>
      <variant>
        <arg type="RVector &amp;" typeName="RVector" name="v"
        isConst="true" />
      </variant>
      <variant>
        <arg type="double" typeName="double" name="vx"
        isConst="false" />
        <arg type="double" typeName="double" name="vy"
        isConst="false" />
        <arg type="double" typeName="double" name="vz"
        hasDefault="true" default="0.0" isConst="false" />
        <arg type="bool" typeName="bool" name="valid_in"
        hasDefault="true" default="true" isConst="false" />
      </variant>
    </constructor>
    <method name="toVectorList" cppName="toVectorList"
    specifier="public" isStatic="true" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="QList &lt; RVector &gt;"
      isPureVirtual="false">
        <arg type="QList &lt; RRefPoint &gt; &amp;"
        typeName="QList &lt; RRefPoint &gt;" name="list"
        isConst="true" />
      </variant>
    </method>
    <method name="toRefPointList" cppName="toRefPointList"
    specifier="public" isStatic="true" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="QList &lt; RRefPoint &gt;"
      isPureVirtual="false">
        <arg type="QList &lt; RVector &gt; &amp;"
        typeName="QList &lt; RVector &gt;" name="list"
        isConst="true" />
        <arg type="RRefPoint::Flags" typeName="RRefPoint::Flags"
        name="flags" hasDefault="true"
        default="RRefPoint :: NoFlags" isConst="false" />
      </variant>
    </method>
    <method name="isSecondary" cppName="isSecondary"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false" />
    </method>
    <method name="setSecondary" cppName="setSecondary"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="bool" typeName="bool" name="on"
        isConst="false" />
      </variant>
    </method>
    <method name="isTertiary" cppName="isTertiary"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false" />
    </method>
    <method name="setTertiary" cppName="setTertiary"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="bool" typeName="bool" name="on"
        isConst="false" />
      </variant>
    </method>
    <method name="isIgnore" cppName="isIgnore" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false" />
    </method>
    <method name="setIgnore" cppName="setIgnore" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="bool" typeName="bool" name="on"
        isConst="false" />
      </variant>
    </method>
    <method name="isCenter" cppName="isCenter" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false" />
    </method>
    <method name="setCenter" cppName="setCenter" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="bool" typeName="bool" name="on"
        isConst="false" />
      </variant>
    </method>
    <method name="isStart" cppName="isStart" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false" />
    </method>
    <method name="setStart" cppName="setStart" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="bool" typeName="bool" name="on"
        isConst="false" />
      </variant>
    </method>
    <method name="isEnd" cppName="isEnd" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false" />
    </method>
    <method name="setEnd" cppName="setEnd" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="bool" typeName="bool" name="on"
        isConst="false" />
      </variant>
    </method>
    <method name="isArrow" cppName="isArrow" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false" />
    </method>
    <method name="setArrow" cppName="setArrow" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="bool" typeName="bool" name="on"
        isConst="false" />
      </variant>
    </method>
    <method name="setFlag" cppName="setFlag" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="RRefPoint::Flag" typeName="RRefPoint::Flag"
        name="flag" isConst="false" />
        <arg type="bool" typeName="bool" name="on"
        isConst="false" />
      </variant>
    </method>
    <method name="getFlag" cppName="getFlag" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false">
        <arg type="RRefPoint::Flag" typeName="RRefPoint::Flag"
        name="flag" isConst="false" />
      </variant>
    </method>
    <method name="getFlags" cppName="getFlags" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="RRefPoint::Flags"
      isPureVirtual="false" />
    </method>
    <method name="setFlags" cppName="setFlags" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="RRefPoint::Flags" typeName="RRefPoint::Flags"
        name="f" isConst="false" />
      </variant>
    </method>
  </class>
</unit>
